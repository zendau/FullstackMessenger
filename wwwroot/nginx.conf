user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    
    server {

        listen              443 ssl;
        server_name localhost 127.0.0.1;
        ssl_certificate     /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        root /usr/share/nginx/html;
        index index.html index.htm;      

 
        location / {
             try_files $uri /index.html =404;
        }


        location /api {
            
            rewrite /api/(.*) /$1 break;

            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Real-IP $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;



            proxy_pass          http://host.docker.internal:3000/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }

        location /socketChat {

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass          http://host.docker.internal:81/socketChat;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }


        location /peerChat {

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass          http://host.docker.internal:82/peerChat;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /peer {

            proxy_pass          http://host.docker.internal:9000/peer;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    }

    server {
        listen 80;
        server_name localhost 127.0.0.1;
        
        return 301 https://$host$request_uri;  
    }        
}